version: '3.9'

services:
  portainer: 
    image: portainer/portainer-ce:latest
    container_name: portainer
    restart: unless-stopped
    #user/pass=admin/Khdt@123456789
    networks:
      - net-app
    security_opt:
       - no-new-privileges:true
    volumes:
       - /etc/localtime:/etc/localtime:ro
       - /var/run/docker.sock:/var/run/docker.sock:ro
       - ./portainer-data:/data 
    ports:
      - 9444:9443
      - 9083:8000
      - 9084:9000

  elasticsearch:
    container_name: els
    #image: docker.elastic.co/elasticsearch/elasticsearch:8.7.0-arm64
    image: docker.elastic.co/elasticsearch/elasticsearch:8.7.0
    ports:
      - 9200:9200
    volumes:
      - ./elasticsearch-data/data:/usr/share/elasticsearch/data
    environment: 
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xmx256m -Xms256m
      - discovery.type=single-node
    #restart: always
    networks:
      - net-elk
  kibana:
    container_name: kibana
    #image: docker.elastic.co/kibana/kibana:8.7.0-arm64
    image: docker.elastic.co/kibana/kibana:8.7.0
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch
    environment:
      - ELASTICSEARCH_URL=http://localhost:9200
    #restart: always
    networks:
      - net-elk

  wiremock:
    container_name: wiremock
    image: wiremock/wiremock
    ports:
      - 9081:8080
    volumes:
      - ./wiremock-data:/home/wiremock
    networks:
      - net-app
  
  nginx:
    image: nginx:stable-alpine
    container_name: nginx
    restart: unless-stopped
    networks:
      - net-app
    ports:
      - 9080:80
      - 9443:443
    volumes:
      - ./nginx-data/config:/etc/nginx/conf.d
      - ./nginx-data/html:/usr/share/nginx/html
      - ./nginx-data/ssl:/root/ssl/official
      - ./nginx-data/log:/var/log/nginx

  postgresql:
    image: postgres
    restart: unless-stopped
    container_name: postgresdb
    environment:
      POSTGRES_USER: ${POSTGRESQL_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      #POSTGRES_DB: ${KEYCLOAK_DB}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - ./postgres-data/data:/var/lib/postgresql/data
    networks:
      - net-db
    ports:
      - 5432:5432

  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: huynhquocbuu@gmail.com
      PGADMIN_DEFAULT_PASSWORD: ${DB_PASSWORD}
    volumes:
       - ./pgadmin4-data:/var/lib/pgadmin

    ports:
      - 9082:80
    networks:
      - net-db
    restart: unless-stopped
  
  mysql:
    image: mysql
    restart: unless-stopped
    container_name: mysqldb
    volumes:
      - ./mysql-data:/var/lib/mysql
    environment: 
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
    networks:
      - net-db
    ports:
      - 3306:3306

  rabbitmq:
    image: rabbitmq:3-management-alpine
    restart: unless-stopped
    container_name: 'rabbitmq'
    ports:
        - 5672:5672
        - 15672:15672
    volumes:
        - ./rabbitmq-data/data:/var/lib/rabbitmq
        - ./rabbitmq-data/log:/var/log/rabbitmq
    networks:
        - net-message-queue

  mongodb:
    image: mongo
    restart: unless-stopped
    container_name: mongodb
    ports:
      - 27017:27017
    environment:
      - MONGO_INITDB_DATABASE=test
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=${DB_PASSWORD}
    volumes:
      # seeding scripts
      - ./mongodb-data/mongo-entrypoint-initdb:/docker-entrypoint-initdb.d
      # named volumes
      - ./mongodb-data/db:/data/db
      - ./mongodb-data/configdb:/data/configdb
    networks:
      - net-db

  redis:
    image: bitnami/redis
    container_name: bitnami_redis
    restart: unless-stopped
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    volumes:
      - ./redis-data/data:/bitnami/redis/data
    ports:
      - 7000:7000
    networks:
      - net-db

networks:
  net-db:
    name: net-db
    driver: bridge
  net-elk:
    name: net-elk
    driver: bridge
  net-message-queue:
    name: net-message-queue
    driver: bridge
  net-app:
    name: net-app
    driver: bridge